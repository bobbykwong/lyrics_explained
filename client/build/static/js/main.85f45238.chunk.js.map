{"version":3,"sources":["components/Songlist.jsx","components/home/Instruction.jsx","components/home/Howitworks.jsx","components/home/Albumcover.jsx","components/home/Latestrelease.jsx","components/home/Lyricstable.jsx","components/home/Lyricsaddition.jsx","components/home/Home.jsx","components/layouts/Search.jsx","components/layouts/Navigation.jsx","components/addlyrics/Form.jsx","components/addlyrics/Existingartist.jsx","components/addlyrics/Addlyrics.jsx","App.jsx","index.js"],"names":["gql","Instruction","className","src","alt","Howitworks","Albumcover","Latestrelease","GET_SONGS","Lyricstable","useQuery","loading","error","data","console","log","table","songs","map","song","index","key","onClick","scope","title","artist","name","artist_cover","Lyricsaddition","Home","Search","type","placeholder","aria-label","Navigation","to","ADD_ARTIST","ADD_SONG","Form","useState","clicked","setClick","artistName","setArtistName","artistCover","setArtistCover","setTitle","useMutation","addArtist","addSong","verseField","field","onSubmit","e","preventDefault","variables","then","results","artist_id","parseInt","id","window","location","submitHandler","onChange","event","target","value","length","GET_ARTIST","Existingartist","props","setArtist","findArtist","setFindArtist","addNewArtist","Addlyrics","page","showForm","setShowForm","client","ApolloClient","uri","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85f45238.chunk.js","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport {gql} from 'apollo-boost';\n\nconst getSongQuery = gql`\n    {\n        songs {\n            title\n        }\n    }\n`;\n\nfunction Songlist() {\n  const { loading, error, data } = useQuery(getSongQuery);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  console.log(data.songs)\n  const songList = data.songs.map(song => {\n    return <p>{song.title}</p>\n  })\n\n  return (\n    <div>\n        <p>ni hao</p>\n        {songList}\n    </div>\n  );\n}\n\nexport default Songlist;","import React from 'react'\n\n\nfunction Instruction() {\n    return(\n        <div className=\"instructions\">\n            <div className=\"instruction\">\n                <p>\n                    Search lyrics to your favourite songs\n                </p>\n            </div>\n            <img src=\"/right_arrow.svg\" alt=\"right arrow\" className=\"right-arrow\"/>\n            <div className=\"instruction\">\n                <p>\n                    Read interpretations to lyrics\n                </p>\n            </div>\n            <img src=\"/right_arrow.svg\" alt=\"right arrow\" className=\"right-arrow\"/>\n            <div className=\"instruction\">\n                <p>\n                    Add your own interpretations to lyrics\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Instruction","import React from 'react'\nimport './Home.css'\nimport Instruction from './Instruction'\n\nfunction Howitworks() {\n    return(\n        <div className=\"instructions-div\">\n            <div className=\"header\">\n                <h2>How It Works</h2>\n            </div>\n            <Instruction />\n        </div>\n    )\n}\n\nexport default Howitworks","import React from 'react'\n\nfunction Albumcover() {\n    return(\n        <div className=\"album-div\">\n            <div className=\"album-cover-div\">\n                <img className=\"album-cover\" src=\"roddy_ricch.jpeg\"/>\n            </div>\n            <div className=\"album-cover-div\">\n                <img className=\"album-cover\" src=\"SZA.png\"/>\n            </div>\n            <div className=\"album-cover-div\">\n                <img className=\"album-cover\" src=\"daniel_caesar.jpg\"/>\n            </div>\n            <div className=\"album-cover-div\">\n                <img className=\"album-cover\" src=\"sabrina_claudio.png\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Albumcover","import React from 'react';\nimport Albumcover from './Albumcover';\n\nfunction Latestrelease() {\n    return(\n        <div className=\"latest-release\">\n            <div className=\"header\">\n                <h2>Latest release</h2>\n            </div>\n            <Albumcover />\n        </div>\n    )\n}\n\nexport default Latestrelease","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks';\nimport {gql} from 'apollo-boost';\n\nconst GET_SONGS = gql`\n    {\n        songs {\n            title\n            artist{\n                name\n                artist_cover\n            }\n        }\n    }\n`;\n\nconst clickHandler = () => {\n    console.log('clicking')\n}\n\n\nfunction Lyricstable() {\n    const { loading, error, data } = useQuery(GET_SONGS);\n    if (error) return <p>Error</p>;\n    if (loading || !data) return <p>Loading...</p>;\n\n    console.log(data)\n\n    const table = data.songs.map((song, index) => {\n        return(\n            <tr key={index} onClick={() => {clickHandler()}}>\n              <th scope=\"row\">{index}</th>\n              <td>{song.title}</td>\n              <td>{song.artist[0].name}</td>\n              <td><img src={song.artist[0].artist_cover} className=\"artist-cover\"/></td>\n            </tr>\n        )\n    })\n\n    return(\n        <table className=\"table table-hover table-responsive-md lyrics-table\">\n          <tbody>\n            {table}\n          </tbody>\n        </table>\n    )\n}\n\nexport default Lyricstable","import React from 'react'\nimport Lyricstable from './Lyricstable'\n\n\nfunction Lyricsaddition() {\n    return(\n        <div className=\"lyrics-addition-div\">\n            <div className=\"header\">\n                <h2>Recent lyrics</h2>\n            </div>\n            <div>\n                <Lyricstable />\n            </div>\n        </div>\n    )\n}\n\nexport default Lyricsaddition","import React from 'react'\nimport Howitworks from './Howitworks'\nimport Latestrelease from './Latestrelease'\nimport Lyricsaddition from './Lyricsaddition.jsx'\n\n\nfunction Home() {\n    return(\n        <div>\n            <Howitworks />\n            <Latestrelease />\n            <Lyricsaddition />\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction Search() {\n    return(\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input className=\"form-control mr-sm-2 search-bar\" type=\"search\" placeholder=\"Search Lyrics\" aria-label=\"Search\">\n          </input>\n          <button className=\"btn btn-outline-success my-2 my-sm-0 search-btn\" type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default Search","import React from 'react'\nimport {\n  Link\n} from \"react-router-dom\";\nimport '../../App.css';\nimport Search from './Search'\n\nfunction Navigation() {\n    return(\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <div className=\"navbar-brand\">\n                <Link className=\"navibar\" to=\"/\">Home</Link>\n            </div>\n            <div>\n                <Search />\n            </div>\n            <div>\n              <Link className=\"navibar\" to=\"/addlyrics\">Add Lyrics</Link>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navigation","import React, { useState } from 'react';\nimport { useMutation } from \"@apollo/react-hooks\"\nimport {gql} from 'apollo-boost';\n\nconst ADD_ARTIST = gql`\n    mutation($name: String!, $artist_cover: String!) {\n        addArtist(name: $name, artist_cover: $artist_cover){\n            name\n            id\n        }\n    }\n`;\n\nconst ADD_SONG = gql`\n    mutation($title: String!, $artist_id: Int!) {\n        addSong(title: $title, artist_id: $artist_id){\n            title\n        }\n    }\n`;\n\nfunction Form() {\n    // Getting state from the input fields\n    const [clicked, setClick] = useState([0]);\n    const [artistName, setArtistName] = useState(\"\");\n    const [artistCover, setArtistCover] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n\n    // Creating mutation function\n    const [addArtist] = useMutation(ADD_ARTIST);\n    const [addSong] = useMutation(ADD_SONG);\n\n    const verseField = clicked.map((field, index) => {\n        return (\n            <textarea key={index} className=\"form-control input-field\" placeholder=\"Lyrics here. Add a new verse whenever you think it deserves its own set of interpretations\"/>\n        )\n    })\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        addArtist({ variables: { name: artistName, artist_cover: artistCover } })\n            .then(results => {\n                const artist_id = parseInt(results.data.addArtist.id)\n                addSong({ variables: {title: title, artist_id: artist_id} })\n            })\n            .then(results => {\n                console.log(results)\n            })\n        window.location = '/'\n    }\n\n    return(\n        <div>\n            <div className=\"header\">\n                <h2>Add lyrics to your favourite song</h2>\n            </div>\n            <form className=\"lyrics-form text-center\" onSubmit={e => {submitHandler(e)}}>\n                <input className=\"form-control input-field\" placeholder=\"Artist\" onChange={(event) => setArtistName(event.target.value)} />\n                <input className=\"form-control input-field\" placeholder=\"Artist Cover Image link\" onChange={(event) => setArtistCover(event.target.value)} />\n                <input className=\"form-control input-field\" placeholder=\"Song Title\" onChange={(event) => setTitle(event.target.value)}/>\n                {verseField}\n                <button type=\"button\" className=\"btn verse-btn mx-auto\" onClick={() => setClick([...clicked, clicked[clicked.length - 1] + 1 ])}>New Verse</button>\n                <button type=\"submit\" className=\"btn verse-btn mx-auto\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default Form","import React, {useState} from 'react';\nimport {gql} from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\n\nconst GET_ARTIST = gql`\n    query Artist($name: String!){\n        artist(name: $name) {\n            name\n        }\n    }\n`;\n\nfunction Existingartist(props) {\n    const [artist, setArtist] = useState(\"\");\n    const [findArtist, setFindArtist] = useState(false);\n\n    const { loading, error, data } = useQuery(GET_ARTIST, {variables: {name: artist}});\n    if (findArtist ) {\n        console.log('found something')\n        if (error) return <p>Whoops got an error Fetching</p>;\n        if (loading || !data) return <p>Loading...</p>;\n        console.log(\"artists that were found: \" + data)\n        setFindArtist(!findArtist);\n    }\n\n\n    return(\n        <div>\n            <div className=\"header\">\n                <h2>Find from existing artists</h2>\n            </div>\n            <form className=\"lyrics-form\">\n                <input className=\"form-control input-field\" placeholder=\"Artist\" onChange={(event) => {setArtist(event.target.value)}}/>\n                <button className=\"btn new-artist-btn\" onClick={() => {setFindArtist(!findArtist)}}>Find Artist</button>\n            </form>\n            <button className=\"btn new-artist-btn\" onClick={() => {props.addNewArtist()}}>Add new Artist</button>\n\n        </div>\n    )\n}\n\nexport default Existingartist","import React, { useState } from 'react';\nimport Form from './Form';\nimport './Addlyrics.css';\nimport {gql} from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport Existingartist from './Existingartist'\n\nconst GET_ARTIST = gql`\n    {\n        artist{\n            name\n            songs{\n                title\n            }\n        }\n    }\n`;\n\nfunction Addlyrics() {\n\n    const [showForm, setShowForm] = useState(false);\n\n    const addNewArtist = () => {\n        setShowForm(!showForm)\n    }\n\n    let page;\n\n    page = !showForm ? <Existingartist addNewArtist={addNewArtist}/> : <Form />\n\n    const { loading, error, data } = useQuery(GET_ARTIST);\n    if (error) return <p>Error</p>;\n    if (loading || !data) return <p>Loading...</p>;\n\n    console.log(data)\n\n    return(\n        <div className=\"addlyrics-div\">\n            {page}\n        </div>\n    )\n}\n\nexport default Addlyrics","import React from 'react';\nimport './App.css';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Songlist from './components/Songlist';\nimport Home from './components/home/Home';\nimport Navigation from './components/layouts/Navigation'\nimport Addlyrics from './components/addlyrics/Addlyrics'\n\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n        <Router>\n          <div>\n            <Navigation />\n            <Switch>\n              <Route path=\"/addlyrics\">\n                <Addlyrics />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);"],"sourceRoot":""}